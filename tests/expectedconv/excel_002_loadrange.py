# -*- coding: utf-8 -*-

"""This file was auto-generated by PyFlow exporter
    'Python exporter v1.0.0'
    Created: 10:36AM on October 02, 2025
"""

EXPORTER_NAME = 'Python exporter'
EXPORTER_VERSION = '1.0.0'


# ======================== VARIABLES AND PARAMETERS SETUP =========================
VARS = {}


# ================================ PACKAGE IMPORTS ================================
# pylint: disable=wrong-import-position
import xlwings as xw
import pandas as pd
# pylint: enable=wrong-import-position

# ================================= PACKAGE SETUPS ================================


# ================================ SYSTEM FUNCTIONS ===============================
def openExcel(path):
    """Open an Excel file with xlwings"""
    return xw.Book(path, update_links=False)


def loadExcelRange(book, sheet_name, range_name, num_header_rows, index, expand):
    """Reads an Excel Range of which top-left cell or whole range
    is given and returns the data as a Pandas DataFrame"""
    if book is None:
        return None
    sh: xw.Sheet = book.sheets[sheet_name]
    if range_name and range_name not in ['None', 'UsedRange']:
        rng = sh.range(range_name)
    else:
        rng = sh.used_range
    if expand=='':
        expand=None
    return rng.options(pd.DataFrame, header=num_header_rows, index=index, expand=expand).value


def closeExcel(book):
    """Close an xlwings workbook"""
    if book is not None:
        book.close()




# ============================== GRAPH IMPLEMENTATION =============================


# ================================== MAIN PROGRAM =================================


# ------- OpenExcel_inExec -------
OpenExcel_out = openExcel('tests\\graphs\\test_data.xlsx')
LoadExcelRange_out = loadExcelRange(OpenExcel_out, 'data1', 'A1:B3', 1, False, '')
closeExcel(OpenExcel_out)
print(LoadExcelRange_out)
