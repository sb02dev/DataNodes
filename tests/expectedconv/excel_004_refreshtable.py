# -*- coding: utf-8 -*-

"""This file was auto-generated by PyFlow exporter
    'Python exporter v1.0.0'
    Created: 11:33AM on October 02, 2025
"""

EXPORTER_NAME = 'Python exporter'
EXPORTER_VERSION = '1.0.0'


# ======================== VARIABLES AND PARAMETERS SETUP =========================
VARS = {}


# ================================ PACKAGE IMPORTS ================================
# pylint: disable=wrong-import-position
import xlwings as xw
import pandas as pd
# pylint: enable=wrong-import-position

# ================================= PACKAGE SETUPS ================================


# ================================ SYSTEM FUNCTIONS ===============================
def openExcel(path):
    """Open an Excel file with xlwings"""
    return xw.Book(path, update_links=False)


def refreshExcelTable(wb: xw.Book | None, table_name: str):
    """Refreshes an Excel Table object (if it is a Query object)"""
    if wb is None:
        return
    for ws in wb.sheets:
        for t in ws.tables:
            if t.name==table_name:
                bgquery = t.api.QueryTable.BackgroundQuery
                try:
                    t.api.QueryTable.BackgroundQuery = False
                    t.api.Refresh()
                finally:
                    t.api.QueryTable.BackgroundQuery = bgquery
                return


def loadExcelTable(book, table_name, index):
    """Reads an Excel Table object and returns the data as a Pandas DataFrame"""
    if book is not None:
        for ws in book.sheets:
            for t in ws.tables:
                if t.name==table_name:
                    data = t.range.options(pd.DataFrame, index=index).value
                    return data
    return None


def closeExcel(book):
    """Close an xlwings workbook"""
    if book is not None:
        book.close()




# ============================== GRAPH IMPLEMENTATION =============================


# ================================== MAIN PROGRAM =================================


# ------- OpenExcel_inExec -------
OpenExcel_out = openExcel('tests\\graphs\\test_data.xlsx')
refreshExcelTable(OpenExcel_out, 'tData2')
LoadExcelTable_out = loadExcelTable(OpenExcel_out, 'tData2', False)
closeExcel(OpenExcel_out)
print(LoadExcelTable_out)
